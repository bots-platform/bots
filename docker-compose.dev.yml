version: '3.8'

services:
  # PostgreSQL Database (Development)
  postgres:
    environment:
      POSTGRES_PASSWORD: dev_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d

  # Redis Cache/Queue (Development)
  redis:
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data

  # Backend API (Development)
  backend:
    build:
      context: .
      dockerfile: docker/backend/Dockerfile
    environment:
      - ENVIRONMENT=development
      - DATABASE_URL=postgresql://rpa_user:dev_password@postgres:5432/rpa_bots
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
      - SECRET_KEY=dev-secret-key-change-in-production
    volumes:
      - .:/app
      - ./media:/app/media
      - ./logs:/app/logs
    ports:
      - "8000:8000"
    command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

  # Celery Worker (Development)
  celery_worker:
    build:
      context: .
      dockerfile: docker/backend/Dockerfile
    environment:
      - ENVIRONMENT=development
      - DATABASE_URL=postgresql://rpa_user:dev_password@postgres:5432/rpa_bots
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
      - SECRET_KEY=dev-secret-key-change-in-production
    volumes:
      - .:/app
      - ./media:/app/media
      - ./logs:/app/logs
    command: ["celery", "-A", "app.core.celery_app", "worker", "--loglevel=info", "--reload"]

  # Frontend (Development)
  frontend:
    build:
      context: ./React-Bots
      dockerfile: ../docker/frontend/Dockerfile.dev
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:8000
    volumes:
      - ./React-Bots:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    command: ["npm", "run", "dev"]

  # Nginx (Development - Optional)
  nginx:
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx/nginx.dev.conf:/etc/nginx/nginx.conf

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local 